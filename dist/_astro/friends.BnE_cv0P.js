import{a as q,b as d,m as o}from"./axios.tkkU2NWh.js";import{s as g,$ as F}from"./auth.Ilt-Bd4Y.js";import{a as v}from"./index.rS7vpNfE.js";const R=5,h=6,l=10;let w=(e,t,s,r)=>(e.events=e.events||{},e.events[s+l]||(e.events[s+l]=r(n=>{e.events[s].reduceRight((a,c)=>(c(a),a),{shared:{},...n})})),e.events[s]=e.events[s]||[],e.events[s].push(t),()=>{let n=e.events[s],a=n.indexOf(t);n.splice(a,1),n.length||(delete e.events[s],e.events[s+l](),delete e.events[s+l])}),T=1e3,x=(e,t)=>w(e,r=>{let n=t(r);n&&e.events[h].push(n)},R,r=>{let n=e.listen;e.listen=(...c)=>(!e.lc&&!e.active&&(e.active=!0,r()),n(...c));let a=e.off;return e.events[h]=[],e.off=()=>{a(),setTimeout(()=>{if(e.active&&!e.lc){e.active=!1;for(let c of e.events[h])c();e.events[h]=[]}},T)},()=>{e.listen=n,e.off=a}});const C=()=>async()=>{const t=await q.get("/refresh",{withCredentials:!0}).catch(a=>a.response);t.status===401&&(g({}),window.location.href="/");const s=t.data?.accessToken,r=t.data?.userId,n=t.data?.role;return g({userId:r,role:n,accessToken:s}),t.data.accessToken},u=()=>{const e=C(),t=d.interceptors.request.use(n=>(n.headers.Authorization||(n.headers.Authorization=`Bearer ${F.get()?.accessToken}`),n),n=>Promise.reject(n)),s=d.interceptors.response.use(n=>n,async n=>{const a=n?.config;if(n.response.status===403&&!a?.sent){a.sent=!0;const c=await e();return a.headers.Authorization=`Bearer ${c}`,d(a)}return Promise.reject(n)});return{axiosPrivate:d,unMount:()=>{d.interceptors.request.eject(t),d.interceptors.response.eject(s)}}},A=async e=>{const{axiosPrivate:t}=u();return await t.get(`/api/message/${e}`).then(s=>s.data).catch(o)},S=async({targetUserId:e,content:t})=>{const{axiosPrivate:s}=u();return await s.post("/api/message",{target_user_id:e,content:t}).then(r=>r.data).catch(o)},M=async()=>{const{axiosPrivate:e}=u();return await e.get("/api/friends/incoming-requests").then(t=>t.data).catch(o)},P=async()=>{const{axiosPrivate:e}=u();return await e.get("/api/friends").then(t=>t.data).catch(o)},E=async e=>{const{axiosPrivate:t}=u();return await t.post("/api/friends/request",{target_username:e}).then(s=>s.data).catch(o)},I=async e=>{const{axiosPrivate:t}=u();return await t.patch("/api/friends/request",{req_user_id:e}).then(s=>s.data).catch(o)},z=async e=>{const{axiosPrivate:t}=u();return await t.patch("/api/friends/incoming-requests",{req_user_id:e}).then(s=>s.data).catch(o)},i=v({currentFriendChat:null,allFriends:null,friendRequests:null,unseenRequests:0}),L=e=>{i.set({...i.get(),currentFriendChat:e}),_()},f=e=>{const t=e.filter(s=>s.unseen).length;i.set({...i.get(),friendRequests:e,unseenRequests:t})},k=e=>{const{currentFriendChat:t,allFriends:s}=i.get(),r=new Map(s);r.set(t.id,{...r.get(t.id),messages:e}),i.set({...i.get(),allFriends:r})};function y(e){const{friendRequests:t}=i.get(),s=t.map(r=>r.id!==e?r:{...r,unseen:!1});f(s)}function B(e){const s=[...i.get().friendRequests];s.unshift(e),f(s)}const _=()=>{const e=i.get();e.currentFriendChat?.id&&A(e.currentFriendChat.id).then(t=>k(t)).catch(t=>{const s=t?.errors?.[0]?t?.errors?.[0].msg:"An unknown error occur";console.error(s)})},p=()=>{P().then(e=>{const t=new Map;for(const s of e)t.set(s.id,s);i.set({...i.get(),allFriends:t})}).catch(e=>{e?.errors?.[0]?console.log(e?.errors?.[0].msg):console.log("An unknown error occur")})},m=()=>{M().then(e=>{f(e)}).catch(e=>{e?.errors?.[0]?console.log(e?.errors?.[0].msg):console.log("An unknown error occur")})};x(i,()=>{p(),m()});function D(){p(),m()}export{i as $,I as a,D as b,y as c,B as d,S as e,A as g,z as m,E as r,L as s};
