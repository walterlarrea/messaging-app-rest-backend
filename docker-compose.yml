version: '3'

services:
  messaging-app-api:
    image: messagingapp.azurecr.io/messaging-app-api:1.0
    container_name: messaging-app-api
    restart: always
    ports:
      - 80:80
    volumes:
      - mapp-shared-vol:/app
    networks:
      - app-network
    depends_on:
      - messaging-app-mysql

  messaging-app-mysql:
    image: mysql:8.0.30
    container_name: messaging-app-mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mapp-shared-vol:/mysql
      - ./docker/provision/mysql/init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  messaging-app-mongo:
    image: mongo:7.0.5
    container_name: messaging-app-mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mapp-shared-vol:/mongo
      - ./docker/provision/mongo/init/init-script.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./docker/provision/mongo/data:/data/db
      - ./docker/provision/mongo/data/log:/var/log/mongodb/
    networks:
      - app-network

  mongo-express:
    image: mongo-express:1.0.0-18-alpine3.18
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: messaging-app-mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_PASSWORD}
    volumes:
      - mapp-shared-vol:/mongo-express
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mapp-shared-vol:
